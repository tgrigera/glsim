% -*- mode: Noweb; noweb-code-mode: c++-mode -*-
%
% logging.nw - a simple log stream
%
% This file is part of glsim, a numerical simulation class library and
% helper programs.
%
% glsim is copyright (C) 2009, 2010, 2011, 2012, 2013, 2014
% by Tomas S. Grigera.
% 
% glsim is free software; you can redistribute it and/or modify it under
% the terms of the GNU General Public License (GPL) as published by the
% Free Software Foundation, with the additional requirements of
% attribution and nonmisrepresentation. You can use either version 3, or
% (at your option) any later version.
% 
% Additional terms under GNU GPL version 3 section 7:
% 
% When you redistribute this software, you are required to preserve its
% author attributions. If you distribute verbatim copies, you must not
% alter the AUTHORS file or attributions inserted in the source files,
% and you must not change the software's name. If you distribute a
% modified copy, then you must give clear notice that your work is
% different from but based on glsim. You must distribute it under a
% different name, but include a prominent notice specifying that "(your
% package) is based on glsim version x.x", and provide a pointer to the
% glsim distribution.
%
% glsim is distributed in the hope that it will be useful, but WITHOUT
% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or FITNESS FOR A PARTICULAR PURPOSE.
% 
% For details see the file LICENSE in the home directory. If the file is
% missing, contact the maintainers.
%
%'

@ \section{Logging}

<<logtest.cc>>=
#include "glsim/log.hh"

glsim::logger glsim::logs;

void flog()
{
  using glsim::logs;
  using glsim::debug;
  using glsim::info;
  using glsim::warn;
  using glsim::error;

  logs(debug) << "A debugging message\n";
  logs(info) << "An information message\n";
  logs(warn) << "A WARING!\n";
  logs(error) << "This is really an ERROR\n";
}

int main(int argc, char *argv[])
{
  std::cout << "Now we will be calling the same function several times,\n"
	    << "wiht different log levels.\n\n";


  std::cout << "\n*** Loglevel debug\n\n";
  glsim::logs.set_stream(std::cout,glsim::debug);
  flog();

  std::cout << "\n*** Loglevel info\n\n";
  glsim::logs.set_stream(std::cout,glsim::info);
  flog();

  std::cout << "\n*** Loglevel warn\n\n";
  glsim::logs.set_stream(std::cout,glsim::warn);
  flog();

  std::cout << "\n*** Loglevel error\n\n";
  glsim::logs.set_stream(std::cout,glsim::error);
  flog();

  return 0;
}
