% -*- mode: Noweb; noweb-code-mode: c++-mode -*-
%
% test/stochastic.nw -- Test of Stochastic classes
%
% This file is part of glsim, a numerical simulation class library and
% helper programs.
%
% glsim is copyright (C) 2009, 2010, 2011, 2012, 2013, 2014
% by Tomas S. Grigera.
% 
% glsim is free software; you can redistribute it and/or modify it under
% the terms of the GNU General Public License (GPL) as published by the
% Free Software Foundation, with the additional requirements of
% attribution and nonmisrepresentation. You can use either version 3, or
% (at your option) any later version.
% 
% Additional terms under GNU GPL version 3 section 7:
% 
% When you redistribute this software, you are required to preserve its
% author attributions. If you distribute verbatim copies, you must not
% alter the AUTHORS file or attributions inserted in the source files,
% and you must not change the software's name. If you distribute a
% modified copy, then you must give clear notice that your work is
% different from but based on glsim. You must distribute it under a
% different name, but include a prominent notice specifying that "(your
% package) is based on glsim version x.x", and provide a pointer to the
% glsim distribution.
%
% glsim is distributed in the hope that it will be useful, but WITHOUT
% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or FITNESS FOR A PARTICULAR PURPOSE.
% 
% For details see the file LICENSE in the home directory. If the file is
% missing, contact the maintainers.
%
%'

@ \section{Stochastic environment}

<<stochtest.cc>>=
#include <glsim/stochastic.hh>

#include <fstream>
#include <iomanip>
#include <boost/archive/binary_oarchive.hpp>
#include <boost/archive/binary_iarchive.hpp>
#include <boost/archive/text_oarchive.hpp>
#include <boost/archive/text_iarchive.hpp>

#include <glsim/log.hh>
#include <glsim/environment.hh>

int main(int argc, char *argv[])
{
  glsim::StandardCL CL;

  int rcode=1;

  try {

    { glsim::StochasticEnvironment senv;
      glsim::SBSimEnvironment env;

      CL.parse_command_line(argc,argv);

      std::cout << "Default seed: " << senv.seed << '\n';

      env.init();
      std::cout << "\nFrom parfile:\n";
      std::cout << "Seed: " << senv.seed << '\n';

      std::cout << "\n\nNow saving...";
      env.save();
      std::cout << "wrote archive\n";
    }

    std::cout <<"\nNow reading archive into new environment\n";
    glsim::StochasticEnvironment senv;
    glsim::SBSimEnvironment env2;
    env2.init();
    env2.environment_file_ini=env2.environment_file_fin;
    env2.load();
    std::cout << "Seed: " << senv.seed << '\n';

    rcode=0;

  } catch (glsim::Early_stop &e) {
  } catch (glsim::Usage_error &e) {
    CL.show_usage();
  } catch (glsim::Runtime_error& e) {
    std::cerr << e.what() << '\n';
    std::cerr << e.backtrace();
  } catch (glsim::Logic_error& e) {
    std::cerr << e.what() << '\n';
    std::cerr << e.backtrace();
  } catch (std::exception &e) {
    std::cerr << "Exception: " << e.what() << '\n';
  }

  return rcode;
}

<<stochtest.ini>>=
title="TEST title"
log_interval=100

[stochastic]
random_number_generator=gsl_rng_mt19937
seed=1994



